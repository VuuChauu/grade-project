"use client";
import { useState } from "react";
import styles from "./Categories.module.css";

export default function Categories() {
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [selectedExercise, setSelectedExercise] = useState(null);
  const [code, setCode] = useState("");
  const [output, setOutput] = useState("");

  const categories = [
    { name: "Tu·∫ßn 1", exercises: ["B√†i 1", "B√†i 2", "B√†i 3"] },
    { name: "Tu·∫ßn 2", exercises: ["B√†i 1", "B√†i 2", "B√†i 3", "B√†i 4"] },
    { name: "Tu·∫ßn 3", exercises: ["B√†i 1", "B√†i 2"] },
    { name: "Tu·∫ßn 4", exercises: ["B√†i 1", "B√†i 2", "B√†i 3"] },
    { name: "Tu·∫ßn 5", exercises: ["B√†i 1", "B√†i 2", "B√†i 3"] },
    { name: "Tu·∫ßn 6", exercises: ["B√†i 1", "B√†i 2", "B√†i 3"] },
  ];

  const exerciseDetails = {
    "Tu·∫ßn 1": {
      "B√†i 1": { title: "B√†i 1: In Hello World", content: "Vi·∫øt ch∆∞∆°ng tr√¨nh in ra 'Hello World'." },
      "B√†i 2": { title: "B√†i 2: T·ªïng hai s·ªë", content: "Nh·∫≠p 2 s·ªë nguy√™n v√† in t·ªïng c·ªßa ch√∫ng." },
      "B√†i 3": { title: "B√†i 3: Ki·ªÉm tra ch·∫µn l·∫ª", content: "Nh·∫≠p s·ªë n, ki·ªÉm tra n l√† ch·∫µn hay l·∫ª." },
    },
    "Tu·∫ßn 2": {
      "B√†i 1": { title: "B√†i 1: Giai th·ª´a", content: "T√≠nh giai th·ª´a c·ªßa n." },
      "B√†i 2": { title: "B√†i 2: ƒê·∫£o chu·ªói", content: "Nh·∫≠p chu·ªói v√† in chu·ªói ƒë·∫£o ng∆∞·ª£c." },
      "B√†i 3": { title: "B√†i 3: T√¨m max", content: "Nh·∫≠p m·∫£ng v√† in ph·∫ßn t·ª≠ l·ªõn nh·∫•t." },
      "B√†i 4": { title: "B√†i 4: S·∫Øp x·∫øp n·ªïi b·ªçt", content: "C√†i ƒë·∫∑t thu·∫≠t to√°n bubble sort." },
    },
    "Tu·∫ßn 3": {
      "B√†i 1": { title: "B√†i 1: ƒê·∫øm s·ªë nguy√™n t·ªë", content: "ƒê·∫øm s·ªë nguy√™n t·ªë t·ª´ 1 ƒë·∫øn n." },
      "B√†i 2": { title: "B√†i 2: T√≠nh t·ªïng m·∫£ng", content: "Nh·∫≠p m·∫£ng v√† t√≠nh t·ªïng c√°c ph·∫ßn t·ª≠." },
    },
    "Tu·∫ßn 4": {
      "B√†i 1": { title: "B√†i 1: ƒê·ªá quy c∆° b·∫£n", content: "Vi·∫øt h√†m ƒë·ªá quy t√≠nh t·ªïng t·ª´ 1 ƒë·∫øn n." },
      "B√†i 2": { title: "B√†i 2: M·∫£ng ƒë·∫£o ng∆∞·ª£c", content: "ƒê·∫£o ng∆∞·ª£c m·∫£ng m√† kh√¥ng d√πng h√†m c√≥ s·∫µn." },
      "B√†i 3": { title: "B√†i 3: S·∫Øp x·∫øp ch√®n", content: "C√†i ƒë·∫∑t thu·∫≠t to√°n insertion sort." },
    },
    "Tu·∫ßn 5": {
      "B√†i 1": { title: "B√†i 1: ƒê·ªá quy c∆° b·∫£n", content: "Vi·∫øt h√†m ƒë·ªá quy t√≠nh t·ªïng t·ª´ 1 ƒë·∫øn n." },
      "B√†i 2": { title: "B√†i 2: M·∫£ng ƒë·∫£o ng∆∞·ª£c", content: "ƒê·∫£o ng∆∞·ª£c m·∫£ng m√† kh√¥ng d√πng h√†m c√≥ s·∫µn." },
      "B√†i 3": { title: "B√†i 3: S·∫Øp x·∫øp ch√®n", content: "C√†i ƒë·∫∑t thu·∫≠t to√°n insertion sort." },
    },
    "Tu·∫ßn 6": {
      "B√†i 1": { title: "B√†i 1: ƒê·ªá quy c∆° b·∫£n", content: "Vi·∫øt h√†m ƒë·ªá quy t√≠nh t·ªïng t·ª´ 1 ƒë·∫øn n." },
      "B√†i 2": { title: "B√†i 2: M·∫£ng ƒë·∫£o ng∆∞·ª£c", content: "ƒê·∫£o ng∆∞·ª£c m·∫£ng m√† kh√¥ng d√πng h√†m c√≥ s·∫µn." },
      "B√†i 3": { title: "B√†i 3: S·∫Øp x·∫øp ch√®n", content: "C√†i ƒë·∫∑t thu·∫≠t to√°n insertion sort." },
    },
  };

  const handleExerciseClick = (categoryName, exerciseName) => {
    setSelectedCategory(categoryName);
    setSelectedExercise(exerciseName);
    setCode("");
    setOutput("");
  };

  const handleRunCode = () => {
    if (!code.trim()) {
      setOutput("‚ö†Ô∏è Vui l√≤ng nh·∫≠p code tr∆∞·ªõc khi ch·∫°y!");
      return;
    }
    setOutput("‚úÖ Code ƒë√£ ch·∫°y th√†nh c√¥ng!\n\n" + code);
  };

  const handleSubmitCode = () => {
    if (!code.trim()) {
      alert("‚ùå B·∫°n ch∆∞a nh·∫≠p code!");
      return;
    }
    alert("üéâ N·ªôp b√†i th√†nh c√¥ng!");
  };

  return (
    <div className={styles.mainLayout}>
      {/* C·ªôt b√™n tr√°i */}
      <div className={styles.leftPane}>
        <h2 className={styles.title}>B√ÄI T·∫¨P C++</h2>
        <ul className={styles.categoryList}>
          {categories.map((cat) => (
            <li
              key={cat.name}
              className={`${styles.categoryItem} ${selectedCategory === cat.name ? styles.active : ""}`}
              onClick={() => setSelectedCategory(cat.name)}
            >
              <span className={styles.categoryName}>{cat.name}</span>
              <ul className={styles.exerciseList}>
                {cat.exercises.map((ex) => (
                  <li
                    key={ex}
                    className={`${styles.exerciseItem} ${
                      selectedExercise === ex && selectedCategory === cat.name
                        ? styles.exerciseActive
                        : ""
                    }`}
                    onClick={(e) => {
                      e.stopPropagation();
                      handleExerciseClick(cat.name, ex);
                    }}
                  >
                    {ex}
                  </li>
                ))}
              </ul>
            </li>
          ))}
        </ul>
      </div>

      {/* C·ªôt b√™n ph·∫£i */}
      <div className={styles.rightPane}>
        {exerciseDetails[selectedCategory]?.[selectedExercise] ? (
          <div className={styles.exerciseDetail}>
            <h2>
              {selectedCategory} - {exerciseDetails[selectedCategory][selectedExercise].title}
            </h2>
            <p>{exerciseDetails[selectedCategory][selectedExercise].content}</p>

            <div className={styles.actionButtons}>
              <button>Xem file input.txt</button>
              <button>Upload file Output</button>
            </div>


            {/* nh·∫≠p code */}
            <div className={styles.codeSection}>
              <textarea
                className={styles.codeEditor}
                placeholder="// Nh·∫≠p code t·∫°i ƒë√¢y..."
                value={code}
                onChange={(e) => setCode(e.target.value)}
              />

              <div className={styles.codeButtons}>
                <button onClick={handleRunCode}> Ch·∫°y code</button>
                <button onClick={handleSubmitCode}> N·ªôp b√†i</button>
              </div>

              {/* K·∫øt qu·∫£ */}
              {output && <pre className={styles.outputBox}>{output}</pre>}
            </div>
          </div>
        ) : (
          <div className={styles.placeholder}>
            <p>üß† Ch·ªçn m·ªôt b√†i t·∫≠p ƒë·ªÉ xem chi ti·∫øt</p>
          </div>
        )}
      </div>
    </div>
  );
}
